# Ansible playbook for setting up a Hadoop master
# using the ec2_instance_facts module

- name: Generate passphrase-less SSH key pair on master
  user:
    name: ubuntu
    generate_ssh_key: yes
    ssh_key_file: .ssh/id_rsa

# register the public key contents so they can be added to the authorized keys
- name: Slurp and register the public key file so it can be used by ansible
  slurp:
    src: /home/ubuntu/.ssh/id_rsa.pub
  register: hadoop_pub_key 

# the following plays add the hosts in the cluster to the known hosts file on the master
- name: Ensure the known_hosts file is created with proper permissions
  file:
    path: /home/ubuntu/.ssh/known_hosts
    owner: ubuntu
    group: ubuntu
    state: touch

- name: Register ssh-keyscan results for all nodes in the cluster to add to known_hosts
  shell: "ssh-keyscan -t ecdsa {{ item }}"
  with_items: 
    - "localhost"
    - "{{ groups['tag_HadoopRole_master'] }}"
    - "{{ groups['tag_HadoopRole_worker'] }}"
  register: ssh_known_host_results

- name: Add/update the public key
  known_hosts:
    name: "{{ item.item }}"
    key: "{{ item.stdout }}"
    path: /home/ubuntu/.ssh/known_hosts
  with_items: "{{ ssh_known_host_results.results }}"

- name: Add the public ip -> hostname mappings for the name node to /etc/hosts 
  blockinfile:
    path: /etc/hosts
    block: |
      {{ hostvars[ item ]['ec2_ip_address'] }} {{ hostvars[ item ]['ec2_private_dns_name'].split('.')[0] }} 
    insertafter: "127.0.0.1 localhost"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
  loop: "{{ groups['tag_HadoopRole_master'] }}"

- name: Add the public ip -> hostname mappings for the data nodes to /etc/hosts 
  blockinfile:
    path: /etc/hosts
    block: |
      {{ hostvars[ item ]['ec2_ip_address'] }} {{ hostvars[ item ]['ec2_private_dns_name'].split('.')[0] }}
    insertafter: "127.0.0.1 localhost"
    marker: "# {mark} ANSIBLE MANAGED BLOCK {{ item }}"
  loop: "{{ groups['tag_HadoopRole_worker'] }}"

- name: Copy over and configure hdfs-site.xml on the name node
  template: 
    src: hdfs-site.xml.j2
    dest: /usr/local/hadoop/etc/hadoop/hdfs-site.xml
    owner: ubuntu
    group: ubuntu
    mode: 0644

- name: Create directory for the metadata on the name node
  file:
    path: /usr/local/hadoop/hadoop_data/hdfs/namenode
    state: directory
    owner: ubuntu
    group: ubuntu

- name: Copy over and configure masters on the name node
  template: 
    src: masters.j2
    dest: /usr/local/hadoop/etc/hadoop/masters
    owner: ubuntu
    group: ubuntu
    mode: 0644

- name: Copy over and configure the slaves file on the name node
  template: 
    src: slaves.j2
    dest: /usr/local/hadoop/etc/hadoop/slaves
    owner: ubuntu
    group: ubuntu
    mode: 0644
